; Chloe Johnson and Anna Novak
; Professor Dickerson
; CSCI 0390
; May 14, 2018


; note: need to deal with mixed-color patches. resampling
; Observer context
to init-patches
  ask patches [              
    set zero-to-four 0
    set five-to-nine 0
    set ten-to-fourteen 0
    set fifteen-to-nineteen 0
    set twenty-to-twenty-four 0
    set twenty-five-to-twenty-nine 0
    set in-boundary? false
    set coastline? false
    set coast-num 0
    set visited? false
  ]
  set-states
  set-coast
  set-closest
end


; Assign all patches a state according to the background image
; Observer context
to set-states
  ask patches [
    ifelse pcolor > 5 and pcolor < 7 and count neighbors4 with [pcolor > 7 ] < 3 [set state "land"][
      ifelse pcolor >= 107 and pcolor < 109 [set state "water"][
        ifelse pcolor > 25 and pcolor < 37 and not any? neighbors4 with [pcolor = 14.7 or pcolor = 45.2 ][set state "ME"][
          ifelse pcolor > 75 and pcolor < 86 [ set state "NH"][
            ifelse pcolor > 125 and pcolor < 136 and not any? neighbors4 with [pcolor = 14.7][set state "MA"][
              ifelse  pcolor > 55 and pcolor < 57 [set state "RI"][
                ifelse pcolor >= 115 and pcolor < 117 and not any? neighbors4 with [pcolor = 125.1][set state "CT"][
                  ifelse pcolor > 37 and pcolor < 47 [set state "NY"][
                    ifelse pcolor > 14 and pcolor < 17 and not any? neighbors4 with [pcolor = 25.2][set state "NJ"][
                    ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ]
  ]
  ask patches with [state = 0][handle-stateless]
  ask patches with [state = "ME" or state = "NH" or state = "RI" or state = "MA" or state = "NY" or state = "CT" or state = "NJ"] [ set in-boundary? true ]
end


; Handle transition colors
; Patch context
to handle-stateless
    set state [state] of one-of neighbors4 with [state != 0]
end


; Observer context
to set-coast
  let land-patches patches with [state = "land"]
  ask land-patches [
    ; Note: ideally this would just be in-boundary?. A few patches off of Maine were labeled "water".
    ifelse any? neighbors with [in-boundary? = true or state = "water"][
      set coastline? true
    ][
      set coastline? false
    ]
  ]
  remove-singles
  remove-doubles
  remove-singles
  set-default-coast
  remove-doubles
  let max-coast 0
  coast-numbers (patch 0 140) max-coast
  set coastal-patches patches with [coast-num > 0]
end

; Observer context
to set-closest
  set traveling-patches patches with [in-boundary?]
  ask traveling-patches [
    set closest-coast [coast-num] of (min-one-of coastal-patches [distance myself])
  ]
end


; Observer context
to remove-singles
  ask patches with [coastline?] [
    if count neighbors4 with [coastline?] = 1 [set coastline? false]
  ]
end

; Observer context
to remove-doubles
  ask patches with [coastline?][
    ; if you have a neighbor above you, to the right of you, and to the diagonal right, set your own coastline? to false
    if [coastline?] of patch (pxcor) (pycor + 1) and [coastline?] of patch (pxcor + 1) (pycor) and [coastline?] of patch (pxcor + 1) (pycor + 1) [
      set coastline? false
    ]
  ]
end

; Observer context
to set-default-coast
  ask patch 0 140 [set coastline? true]
  ask patch 1 140 [set coastline? true]
  ask patch 2 140 [set coastline? true]
  ask patch 2 139 [set coastline? true]
  ask patch 2 138 [set coastline? true]
  ask patch 3 138 [set coastline? true]
  ask patch 4 138 [set coastline? true]
  ask patch 5 138 [set coastline? true]
  ask patch 470 144 [set coastline? true]
  ask patch 470 145 [set coastline? true]
  ask patch 470 146 [set coastline? true]
  ask patch 470 147 [set coastline? true]
  ask patch 470 148 [set coastline? true]
  ask patch 471 148 [set coastline? true]
  ask patch 472 148 [set coastline? true]
  ask patch 473 148 [set coastline? true]
  ask patch 474 148 [set coastline? true]
  ask patch 474 147 [set coastline? true]
  ask patch 830 255 [set coastline? true]
  ask patch 831 255 [set coastline? true]
  ask patch 832 255 [set coastline? true]
  ask patch 833 255 [set coastline? true]
  ask patch 309 146 [set coastline? false]
  ask patch 310 147 [set coastline? false]
  ask patch 472 147 [set coastline? false]
  ask patch 830 256 [set coastline? false]
  ask patch 831 256 [set coastline? false]
  ask patch 832 256 [set coastline? false]
  ask patch 833 256 [set coastline? false]
end

; Observer context
to coast-numbers [my-patch current-num]
  ;print(my-patch)
  ask my-patch [ 
    set coast-num current-num
    set visited? true
    set current-num current-num + 1
    if my-patch != patch 832 255 [
      let next-patch one-of neighbors4 with [ not visited? and coastline? ]
      coast-numbers next-patch current-num
    ]
  ]
end




; Observer context
to init-globals
  set day 0
  set year 0
  set min-window 0
  set max-window 40
  set distribution-variability 0.2
  ;set traveling-patches patches with [in-boundary?]
  set daily-death-rate 0.00055
  set offseason-death-rate .107
  set base-max-yield 10000
  set boat-radius 1
  set catch-probability 0.5
  set migratory-distribution-variability 0.5
end



; Observer context
to init-boats
  create-boats num-boats [
    set shape "boat"
    set size 10
    move-to one-of traveling-patches
    set color yellow
    set current-state [state] of patch-here
    set caught-0to4 0   ; 0 to 23 inches in length
    set caught-5to9 0   ; 24 to 32 inches in length
    set caught-10to14 0 ; 33 to 43 inches in length
    set caught-15to19 0 ; 44 to 53 inches in length
    set caught-20to24 0 ; 54 to 61 inches in length
    set caught-25to29 0 ; 62 to 70 inches in length
    set fish-caught 0
  ]
end



; Observer context
to init-fish
  let npiw num-patches-in-window
  let distribution round (approx-init-pop / npiw)
  ask traveling-patches with [pxcor >= min-window and pxcor <= max-window and pycor < 138] [ ; delete pycor when map is fixed

    let plus-minus random 2
    ifelse plus-minus = 0 [
      set zero-to-four round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability))))
    ][
      set zero-to-four round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability * -1))))
    ]

    set plus-minus random 2
    ifelse plus-minus = 0 [
      set five-to-nine round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability))))
    ][
      set five-to-nine round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability * -1))))
    ]

    set plus-minus random 2
    ifelse plus-minus = 0 [
      set ten-to-fourteen round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability))))
    ][
      set ten-to-fourteen round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability * -1))))
    ]

    set plus-minus random 2
    ifelse plus-minus = 0 [
      set fifteen-to-nineteen round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability))))
    ][
      set fifteen-to-nineteen round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability * -1))))
    ]

    set plus-minus random 2
    ifelse plus-minus = 0 [
      set twenty-to-twenty-four round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability))))
    ][
      set twenty-to-twenty-four round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability * -1))))
    ]

    set plus-minus random 2
    ifelse plus-minus = 0 [
      set twenty-five-to-twenty-nine round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability))))
    ][
      set twenty-five-to-twenty-nine round ((0.12 + random-float 0.08) * (distribution + (round (distribution * random-float distribution-variability * -1))))
    ]

    set total-fish fish-on-patch
  ]
  migrate
end
